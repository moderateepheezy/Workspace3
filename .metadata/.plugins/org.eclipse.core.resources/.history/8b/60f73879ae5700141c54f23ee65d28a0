package com.example.chatapp;

import java.util.Arrays;
import java.util.List;

import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.IBinder;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import com.parse.FindCallback;
import com.parse.ParseException;
import com.parse.ParseQuery;
import com.parse.ParseUser;

public class MessagingActivity extends ActionBarActivity {
	private String recipientId;
	private String messageBody;
	
	private EditText messageBodyField;
	private ListView messageList;
	
	//private MessageAdapter messageAdapter;
	
	private MessageService.MessageServiceInterface messageService;
	private String currentUserId;
	private ServiceConnection serviceConnection = new MyServiceConnection();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_messaging);

		bindService(new Intent(this, MessageService.class), serviceConnection,
				BIND_AUTO_CREATE);
		Intent intent = getIntent();
		recipientId = intent.getStringExtra("RECIPIENT_ID");
		currentUserId = ParseUser.getCurrentUser().getObjectId();
		
		messageBodyField =(EditText)findViewById(R.id.messageBodyField);
		
		findViewById(R.id.sendButton).setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View view) {
				sendMessage();
			}
		});
		
		
		
		messageList =(ListView)findViewById(R.id.listMessages);
		//me
		
	}
	
	public void sendMessage(){
		messageBody = messageBodyField.getText().toString();
		if(messageBody.isEmpty()){
			Toast.makeText(getApplicationContext(), "Please enter a message", Toast.LENGTH_LONG).show();
			return;
		}
		messageService.sendMessage(recipientId, messageBody);
		messageBodyField.setText("");
	}
	
	@Override
	protected void onDestroy() {
		unbindService(serviceConnection);
		super.onDestroy();
	}
	
	private void populateMessageHistory() {
		String userIds[] = {currentUserId, recipientId};
		ParseQuery<ParseUser> query = ParseUser.getQuery();
		query.whereContainedIn("senderId", Arrays.asList(userIds));
		query.whereContainedIn("recipientId", Arrays.asList(userIds));
		query.orderByAscending("createdAt");
		query.findInBackground(new FindCallback<ParseUser>() {
			
			@Override
			public void done(List<ParseUser> objects, ParseException e) {
				
			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.messaging, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public class MyServiceConnection implements ServiceConnection{

		@Override
		public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
			messageService = (MessageService.MessageServiceInterface)iBinder;
		}

		@Override
		public void onServiceDisconnected(ComponentName componentName) {
			messageService = null;
		}
		
	}
}
